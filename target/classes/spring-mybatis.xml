<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 自动扫描本地数据的位置 -->
	<context:component-scan base-package="com.mtpt.bean"></context:component-scan>
	<context:component-scan base-package="com.mtpt.dao"></context:component-scan>
	<context:component-scan base-package="com.mtpt.service"></context:component-scan>
	<context:component-scan base-package="com.mtpt.service.impl"></context:component-scan>
	<!-- 自动扫描大数据中文件的位置 -->
	<context:component-scan base-package="com.mtpt.alibean"></context:component-scan>
	<context:component-scan base-package="com.mtpt.alidao"></context:component-scan>
	<context:component-scan base-package="com.mtpt.aliservice"></context:component-scan>
	<context:component-scan base-package="com.mtpt.aliservice.impl"></context:component-scan>
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${local.jdbc.driver}" />
		<property name="url" value="${local.jdbc.url}" />
		<property name="username" value="${local.jdbc.username}" />
		<property name="password" value="${local.jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${local.jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${local.jdbc.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${local.jdbc.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${local.jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${local.jdbc.maxWait}"></property>
	</bean>
	<bean id="alidataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${ali.jdbc.driver}" />
		<property name="url" value="${ali.jdbc.url}" />
		<property name="username" value="${ali.jdbc.username}" />
		<property name="password" value="${ali.jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${ali.jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${ali.jdbc.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${ali.jdbc.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${ali.jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${ali.jdbc.maxWait}"></property>
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/mtpt/mapper/*.xml"></property>
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactoryAli" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="alidataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/mtpt/alimapper/*.xml"></property>
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mtpt.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mtpt.alidao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryAli"></property>
	</bean>
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManagerDsj"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="alidataSource" />
	</bean>
</beans>